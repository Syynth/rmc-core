{"version":3,"sources":["../../src/__tests__/registry-test.js"],"names":[],"mappings":"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","file":"registry-test.js","sourcesContent":["jest.dontMock('../registry.js');\r\n\r\nconst { ComponentRegistry } = require('../registry.js');\r\n\r\nconst renderFn = jest.genMockFn();\r\nconst defArgs = { renderFn };\r\nconst freezeItArgs = { renderFn, freeze: true };\r\n\r\ndescribe('ComponentRegistry', () => {\r\n\r\n  describe('api', () => {\r\n\r\n    it('should have a register method', () => {\r\n      let inst = new ComponentRegistry(defArgs);\r\n      expect(inst.register).toBeDefined();\r\n    });\r\n\r\n    it('should have a deregister method', () => {\r\n      let inst = new ComponentRegistry(defArgs);\r\n      expect(inst.deregister).toBeDefined();\r\n    });\r\n\r\n  });\r\n\r\n  describe('component registration', () => {\r\n\r\n    it('should add registered components as properties on the registry', () => {\r\n      let inst = new ComponentRegistry(defArgs);\r\n      expect(inst.someComponent).not.toBeDefined();\r\n      inst.register('someComponent', () => 0);\r\n      expect(inst.someComponent).toBeDefined();\r\n    });\r\n\r\n    it('should now allow two components with the same name to be registered', () => {\r\n      let inst = new ComponentRegistry(defArgs);\r\n      expect(() => inst.register('someComponent', () => 0)).not.toThrow();\r\n      expect(() => inst.register('someComponent', () => 0)).toThrow();\r\n    });\r\n\r\n  });\r\n\r\n  describe('component deregistration', () => {\r\n\r\n    it('should remove registered components as properties on the registry', () => {\r\n      let inst = new ComponentRegistry(defArgs);\r\n      inst.register('someComponent', () => 0);\r\n      expect(inst.someComponent).toBeDefined();\r\n      inst.deregister('someComponent');\r\n      expect(inst.someComponent).not.toBeDefined();\r\n    });\r\n\r\n  })\r\n\r\n  describe('freezing behavior', () => {\r\n\r\n    it('should remove the register/deregister methods when constructed', () => {\r\n      let inst = new ComponentRegistry(freezeItArgs);\r\n      expect(inst.register).not.toBeDefined();\r\n      expect(inst.deregister).not.toBeDefined();\r\n    });\r\n\r\n    it('should prevent extensions if freeze is passed to the constructor', () => {\r\n      expect(Object.isExtensible(new ComponentRegistry(freezeItArgs)))\r\n        .toEqual(false);\r\n    });\r\n\r\n    it('should seal registry if freeze is passed to the constructor', () => {\r\n      expect(Object.isSealed(new ComponentRegistry(freezeItArgs)))\r\n        .toEqual(true);\r\n    });\r\n\r\n    it('should freeze registry if freeze is passed to the constructor', () => {\r\n      expect(Object.isFrozen(new ComponentRegistry(freezeItArgs)))\r\n        .toEqual(true);\r\n    });\r\n\r\n  });\r\n\r\n});\r\n"]}