{"version":3,"sources":["../src/renderer.jsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;qBAAyD,OAAO;;AAEzD,SAAS,UAAU,CAAC,IAAI,EAAE,QAAQ,EAAE;AACzC,MAAI,OAAO,IAAI,KAAK,QAAQ,IAAI,IAAI,YAAY,MAAM,EAAE;AACtD,WAAO,IAAI,CAAC;GACb;MACK,QAAQ,GAAqB,IAAI,CAAjC,QAAQ;MAAE,OAAO,GAAY,IAAI,CAAvB,OAAO;MAAE,KAAK,GAAK,IAAI,CAAd,KAAK;;AAC9B,MAAI,IAAI,GAAG,QAAQ,CAAC,GAAG,CAAC,UAAA,KAAK;WAAI,UAAU,CAAC,KAAK,EAAE,QAAQ,CAAC;GAAA,CAAC,CAAC;AAC9D,MAAI,KAAK,GAAG,OAAO,CAAC,CAAC,CAAC,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAC9C,WAAI,KAAK,CAAC,GAEV,QAAQ,CAAC,OAAO,CAAC,CAAC;AACtB,SAAO,KAAK,mBAAC,KAAK,4BAAK,IAAI,GAAC,CAAC;CAC9B;;IAEY,WAAW;YAAX,WAAW;;WAAX,WAAW;0BAAX,WAAW;;+BAAX,WAAW;;;eAAX,WAAW;;WAChB,kBAAG;AACP,aAAO,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;KAC3D;;;SAHU,WAAW;;;;;AAMxB,WAAW,CAAC,SAAS,GAAG;AACtB,MAAI,EAAE,iBAAU,OAAO,CAAC;AACtB,WAAO,EAAE,iBAAU,MAAM,CAAC,UAAU;AACpC,SAAK,EAAE,iBAAU,MAAM,CAAC,UAAU;AAClC,YAAQ,EAAE,iBAAU,OAAO,CAAC,iBAAU,KAAK,CAAC,CAC1C,iBAAU,MAAM,EAAE,iBAAU,MAAM,CACnC,CAAC,CAAC,CAAC,UAAU;GACf,CAAC;CACH,CAAC;;AAEF,WAAW,CAAC,YAAY,GAAG;AACzB,UAAQ,EAAE,iBAAU,MAAM;CAC3B,CAAC","file":"renderer.js","sourcesContent":["import { Component, createElement, DOM, PropTypes } from 'react'\r\n\r\nexport function renderData(data, registry) {\r\n  if (typeof data === 'string' || data instanceof String) {\r\n    return data;\r\n  }\r\n  let { children, tagName, props } = data;\r\n  let kids = children.map(child => renderData(child, registry));\r\n  let tagFn = tagName[0] == tagName[0].toLowerCase() ?\r\n      DOM[tagFn]\r\n    :\r\n      registry[tagName];\r\n  return tagFn(props, ...kids);\r\n}\r\n\r\nexport class RmcRenderer extends Component {\r\n  render() {\r\n    return renderData(this.props.data, this.context.registry);\r\n  }\r\n}\r\n\r\nRmcRenderer.propTypes = {\r\n  data: PropTypes.shapeOf({\r\n    tagName: PropTypes.string.isRequired,\r\n    props: PropTypes.object.isRequired,\r\n    children: PropTypes.arrayOf(PropTypes.oneOf([\r\n      PropTypes.string, PropTypes.object\r\n    ])).isRequired\r\n  })\r\n};\r\n\r\nRmcRenderer.contextTypes = {\r\n  registry: PropTypes.object\r\n};\r\n"]}