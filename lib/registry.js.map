{"version":3,"sources":["../src/registry.js"],"names":[],"mappings":"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","file":"registry.js","sourcesContent":["import { isString, isFunction, isObject } from './utils'\r\n\r\nconst map = Symbol('map');\r\nconst expose = Symbol('expose');\r\nconst string = Symbol('string');\r\nconst func = Symbol('func');\r\nconst object = Symbol('object');\r\n\r\nclass ComponentRegistry {\r\n\r\n  constructor({ preload, freeze = false } = {}) {\r\n    this[map] = new Map();\r\n    if (preload) {\r\n      Object.keys(preload)\r\n        .forEach(key => this.register(key, preload[key]));\r\n    }\r\n    if (freeze) {\r\n      delete this.register;\r\n      this.register = undefined;\r\n      delete this.deregister;\r\n      this.deregister = undefined;\r\n      Object.seal(this);\r\n      Object.freeze(this);\r\n      Object.preventExtensions(this);\r\n    }\r\n  }\r\n\r\n  [expose](name, component)  {\r\n    if (component.type === null) {\r\n      throw new TypeError('You can only register strings, functions, and ' +\r\n                          'objects as components');\r\n    }\r\n    if (this[map].has(name)) {\r\n      throw new Error('You cannot add the same component to a registry twice!');\r\n    }\r\n    this[map].set(name, component);\r\n    Object.defineProperty(this, name, {\r\n      configurable: true,\r\n      get: () => this[map].get(name).value\r\n    });\r\n    return this;\r\n  }\r\n\r\n  register(name, cmp) {\r\n    let type = isString(cmp) ? string :\r\n      (isFunction(cmp) ? func : (isObject(cmp) ? object : null));\r\n    if (!cmp) type = null;\r\n    return this[expose](name, { type, value: cmp });\r\n  }\r\n\r\n  get nativeValues() {\r\n    let arr = [];\r\n    for (let entry of this[map].entries()) { arr.push(entry) }\r\n    return arr.filter(([k, v]) => v.type != object)\r\n      .map(([k, v]) => [k, v.value])\r\n      .reduce((memo, [k, v]) => memo[k] = v && memo, {});\r\n  }\r\n\r\n  get objectValues() {\r\n    let arr = [];\r\n    for (let entry of this[map].entries()) { arr.push(entry) }\r\n    return arr.filter(([k, v]) => v.type == object)\r\n      .map(([k, v]) => [k, v.value])\r\n      .reduce((memo, [k, v]) => memo[k] = v && memo, {});\r\n  }\r\n\r\n  deregister(name) {\r\n    this[map].delete(name);\r\n    delete this[name];\r\n    return this;\r\n  }\r\n\r\n}\r\n\r\nexport { ComponentRegistry };\r\n"]}